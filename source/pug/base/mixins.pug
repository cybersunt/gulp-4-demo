//- COMPONENTS

//- logotype
mixin logo(className, name, alt, width, height)
  if currentPage !== 'Главная'
    a(href='index.html' class=`${className}__logo`)
      img(src=`img/${name}.svg` alt=`${alt}` width=width height=height class=`${className}__img`)
  else
    div(class=`${className}__logo`)
      img(src=`img/${name}.svg` alt=`${alt}` width=width height=height class=`${className}__img`)

//-main-nav
mixin mainNav
  nav.main-nav
    ul.__list
      each link, title in mainNav
        case currentPage
          when !title
          when 'Главная'
            li.__item
              a(href= link).__link= title
          default
            li.__item.__item--current
              a(href= link).__link= title
// social networks
mixin socialLinks
  ul.social
    each network, value in networks
      li.__item
        a.__link(href=network.url, aria-label=network.title)
          img(src='http://placehold.it/25x25', alt=network.title, width=network.width, height=network.height).__icon
            //- svg.__icon(width='26px', height='15px', aria-labelledby='Мы во Вконтакте'
            //-   title#title__vk Мы во Вконтакте
            //-     use(xlink:href='#vk-icon')

// slideshow/gallery/advertising/advertisement/adv/commercial/promo/slider/carousel
mixin promoBlock(className)
  section(class=`${className}`)
    div(class=`${className}__wrap`)
      h2.visually-hidden Заголовок что это
        ul(class=`${className}__list`)
          each ad, value in ads
            li(class=`${className}__item`)
              p(class=`${className}__caption`)= ad.caption
              p(class=`${className}__desc`)= ad.description
              a.btn(class=`${className}__btn`, href=ad.url)= ad.captionBtn
                img(class=`${className}__img` src=`img/${ad.imgSrc}.jpg`, alt=ad.imgAlt)
        div(class=`${className}__toggles`)
          button(class=`${className}__toggle ${className}__toggle--checked` type='button', aria-label='Первый слайд')
          button(class=`${className}__toggle` type='button', aria-label='Второй слайд')
          button(class=`${className}__toggle` type='button', aria-label='Третий слайд')
        div(class=`${className}__arrows`)
          button(class=`${className}__arrow ${className}__arrow--prev` type='button', aria-label='Предыдущий слайд')
          button(class=`${className}__arrow ${className}__arrow--next` type='button', aria-label='Следующий слайд')

// features/benefits/advantages/services
mixin featuresList(className)
  section(class=`${className}`)
    div(class=`${className}__wrap`)
      h2.visually-hidden Направления деятельности компании, услуги и прочее
        ul(class=`${className}__list`)
          each picture, value in pictures
            li(class=`${className}__item`)
              picture
                source(type='image/webp', srcset=`img/${picture.src}.webp`)
                img(class=`${className}__img`, src=`img/${picture.src}.png`, alt=picture.caption)
              p(class=`${className}__caption`)= picture.caption
              p(class=`${className}__notice`)= picture.annotation
              a(href="#", class=`${className}__link` aria-label=picture.caption)


// brands/parthers/customers/technologies
mixin logoList(className)
  section(class=`${className}`)
    div(class=`${className}__wrap`)
      h2.visually-hidden Используемые технологии в проекте
        ul(class=`${className}__list`)
          each logo, value in logos
            li(class=`${className}__item`)
              a(href=logo.url, class=`${className}__link` aria-label=logo.label)
              picture
                source(type='image/webp', srcset=`img/${logo.imgSrc}.webp`)
                img(class=`${className}__img`, src=`img/${logo.imgSrc}.png`, alt=logo.label)

// pagination
mixin pagination(amount, current)
  section.pagination
    h2.visually-hidden Пагинация
      ul.pagination__list
        - for (var index = 0; index <= amount; index ++)
          case index
            when 0
              li.pagination__item
                a.pagination__link.pagination__link--prev(href="#") Предыдущая
            when amount
              li.pagination__item
                a.pagination__link.pagination__link--next(href="#") Следующая
            when current
              li.pagination__item
                a.pagination__link.pagination__link--current(href="#")=index
            default
              li.pagination__item
                a.pagination.__link(href="#")= index

// map
mixin map
  section.contacts
    h2.visually-hidden= contacts.title
    .contacts__wrap
      #map.contacts__map
        picture.contacts__map-img
          source(type='image/webp', srcset=`img/content/${contacts.imgSrc}.webp`)
          img(src=`img/content/${contacts.imgSrc}.jpg`, alt=`Офис компании по адресу ул. ${contacts.adress}, ${contacts.city}`)
      .contacts__info
        p.contacts__name= contacts.name
        p.contacts__adress= `${contacts.index}, ${contacts.city}, ${contacts.adress}`
        p.contacts__phone= `тел. ${contacts.phone}`
        a.btn.contacts__btn(href='write-us.html') Напишите нам

//CATALOG: categories/goods/cardProducts/services/hotels
mixin catalogList(className, namePage, items, classNameGoods)
  section(class=`${className}`)
    h1(class=`${className}__caption`)=namePage
    div(class=`${className}__wrap`)
      ul(class=`${className}__list`)
        each item, value in items
          if items === categories
            li(class=`${className}__item category`)
              a(class='category__link', href=`${item.link}`)
                img(class='category__img', src=`${item.preview}`, alt=`${item.name}`)
                h2(class='category__name')=item.name
          else if items === goods
            li(class=`${className}__item ${classNameGoods}`)
              a(class=`${classNameGoods}__link`, href=`${item.link}`)
                img(class=`${classNameGoods}__img`, src=`${item.imgPreview}`, alt=`${item.name}`)
                h3(class=`${classNameGoods}__name`)=item.name
                p(class=`${classNameGoods}__description`)=item.description
              p(class=`${classNameGoods}__price`)= `${item.price} руб.`

//FORMS

// range
mixin rangePrice
  label.visually-hidden(for='price')
    | Шкала стоимости
    input#price(type='range', name='price', min='0', max=filter.maxPrice, step=filter.stepPrice)
  .filter-price__range-controls
    .filter-price__scale
      .filter-price__bar
    button.filter-price__toggle.filter-price__toggle--toggle-min
    buttom.filter-price__toggle.filter-price__toggle--toggle-max
  .filter-price__controls
    label.filter-price__price.filter-price__price--min(for='min-price')
      | от
      input#min-price.filter-price__input(type='number', value='0', min=0)
    label.filter-price__price.filter-price__price--max(for='max-price')
      | до
      input#max-price.filter-price__input(type='number', value=filter.maxPrice, max=filter.maxPrice)

mixin radioButtons(name, items)
  each item, value in items
    if item.checked === true
      input.filter__radio(id=`${item.id}`, name=name, value=`${item.value}`, type='radio', checked='')
      label.filter__value(for=`${item.id}`, onmousedown='return false', tabindex='0')= item.label
    else
      input.filter__radio(id=`${item.id}`, name=name, value=`${item.value}`, type='radio')
      label.filter__value(for=`${item.id}`, onmousedown='return false', tabindex='0')= item.label

mixin checkBoxes(items)
  each item, value in items
    if item.checked === true
      input.filter__radio(id=`${item.id}`, name=`${item.name}`, type='checkbox', checked='')
      label.filter__value(for=`${item.id}`, onmousedown='return false', tabindex='0')= item.label
    else
      input.filter__radio(id=`${item.id}`, name=`${item.name}`,  type='checkbox')
      label.filter__value(for=`${item.id}`, onmousedown='return false', tabindex='0')= item.label

//feedback
mixin feedback
  .overlay.hidden
      section.feedback
        .feedback__wrap
          h2.feedback__title Напишите нам
          form.feedback__form(action='https://echo.htmlacademy.ru', method='post')
            each feedback, value in feedbacks
              p.feedback__layout
                label.feedback__label(for=`${feedback.id}`)= feedback.label
                  if feedback.id !== "message"
                    if feedback.required === true
                      input.feedback__field(id=`${feedback.id}`, placeholder=`${feedback.placeholder}`, type=`${feedback.type}`, name=`${feedback.name}` required)
                    else
                       input.feedback__field(id=`${feedback.id}`, placeholder=`${feedback.placeholder}`, type=`${feedback.type}`, name=`${feedback.name}`)
                  else
                    textarea.feedback__textarea(id=`${feedback.id}`, placeholder=`${feedback.placeholder}`, name=`${feedback.name}`)

            button.btn.feedback__send(type='submit')= btns.sendOff
          button.feedback__close(type='button', aria-label=`${btns.close}`)
            svg.feedback__close-icon(width='21', height='21', aria-labelledby='feedback__close-title')
              title#feedback__close-title= btns.close
                 use(xlink:href='#close-cross')


//- mixin nav (className, name, items)
//-   nav(class=`${className}`)
//-     ul(class=`${className}__list`)
//-       each item in items
//-         li(class=`${className}__item`)
//-           a(class=`${className}__link`, href='#')= item

